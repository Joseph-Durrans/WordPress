{"version":3,"file":"app.js","mappings":"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","sources":["webpack://custom-theme/./node_modules/@glidejs/glide/dist/glide.esm.js","webpack://custom-theme/./src/js/index.js","webpack://custom-theme/./src/js/slider.js"],"sourcesContent":["/*!\n * Glide.js v3.5.2\n * (c) 2013-2021 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        list.forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n","// js index\r\n\r\nimport initSlider from \"./slider\";\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    initSlider();\r\n});\r\n","import Glide from \"@glidejs/glide\";\r\n\r\nconst initSlider = () => {\r\n    new Glide(\".glide\").mount();\r\n};\r\n\r\nexport default initSlider;\r\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_superPropBase","object","property","hasOwnProperty","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","arguments","value","apply","this","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perSwipe","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","waitForTransition","throttle","direction","peek","cloningRatio","breakpoints","classes","swipeable","dragging","ltr","rtl","slider","carousel","slide","clone","active","arrow","disabled","nav","warn","msg","console","error","concat","toInt","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","mount","glide","extensions","events","components","name","_name","prop","definition","mergeOptions","settings","options","assign","EventsBus","undefined","hop","event","handler","index","push","remove","on","context","emit","forEach","item","Glide$1","Glide","selector","_c","_t","_e","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","_i","_d","status","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS","Rtl","Components","modify","translate","Direction","is","Gap","multiplier","Math","floor","Sizes","slideWidth","Gaps","Grow","Clones","grow","Peeking","Peek","before","Focusing","width","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","sortBreakpoints","points","keys","sort","reduce","r","k","COMPONENTS","Html","Events","root","track","querySelector","collectSlides","slides","slice","wrapper","children","filter","classList","contains","_r","document","t","Translate","transform","TRANSFORMERS","mutate","transformer","mutator","translate3d","style","mozTransform","webkitTransform","getStartIndex","isOffset","getTravelDistance","travelDistance","isType","movement","after","startWidth","compose","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","peekIncrementer","cloneCount","round","append","reverse","prepend","max","cloneNode","_clone","unshift","_Components$Html","half","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","_Glide$settings$class","move","calculate","isStart","isEnd","steps","viewSize","calculateForwardIndex","isBound","normalizeForwardIndex","_index","ceil","calculateBackwardIndex","normalizeBackwardIndex","_m","step","substr","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","start","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","end","_Glide$settings2","threshold","swipeDistance","swipeDeg","unbindSwipeMove","unbindSwipeEnd","_Glide$settings3","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","attach","Controls","_n","_arrowControls","next","addBindings","setActive","removeActive","controls","setArrowState","resetArrowState","disableArrow","_len","lists","_key","list","element","_len2","_key2","removeBindings","elements","currentTarget","getAttribute","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","_Core","subClass","superClass","create","_inherits","Derived","hasNativeReflectConstruct","_super","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget"],"sourceRoot":""}